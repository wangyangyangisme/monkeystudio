qtsql.QDataBrowser.Boundary
qtsql.QDataBrowser.Unknown
qtsql.QDataBrowser.None
qtsql.QDataBrowser.BeforeBeginning
qtsql.QDataBrowser.Beginning
qtsql.QDataBrowser.End
qtsql.QDataBrowser.AfterEnd
qtsql.QDataBrowser(QWidget=None, str=None, unsigned long=0)
qtsql.QDataBrowser.__init__(self, QWidget=None, str=None, unsigned long=0)
qtsql.QDataBrowser.metaObject() -> QMetaObject
qtsql.QDataBrowser.boundary() -> QDataBrowser.Boundary
qtsql.QDataBrowser.setBoundaryChecking(bool)
qtsql.QDataBrowser.boundaryChecking() -> bool
qtsql.QDataBrowser.setSort(QSqlIndex)
qtsql.QDataBrowser.setSort(QStringList)
qtsql.QDataBrowser.sort() -> QStringList
qtsql.QDataBrowser.setFilter(QString)
qtsql.QDataBrowser.filter() -> QString
qtsql.QDataBrowser.setSqlCursor(QSqlCursor, bool=False)
qtsql.QDataBrowser.sqlCursor() -> QSqlCursor
qtsql.QDataBrowser.setForm(QSqlForm)
qtsql.QDataBrowser.form() -> QSqlForm
qtsql.QDataBrowser.setConfirmEdits(bool)
qtsql.QDataBrowser.setConfirmInsert(bool)
qtsql.QDataBrowser.setConfirmUpdate(bool)
qtsql.QDataBrowser.setConfirmDelete(bool)
qtsql.QDataBrowser.setConfirmCancels(bool)
qtsql.QDataBrowser.confirmEdits() -> bool
qtsql.QDataBrowser.confirmInsert() -> bool
qtsql.QDataBrowser.confirmUpdate() -> bool
qtsql.QDataBrowser.confirmDelete() -> bool
qtsql.QDataBrowser.confirmCancels() -> bool
qtsql.QDataBrowser.setReadOnly(bool)
qtsql.QDataBrowser.isReadOnly() -> bool
qtsql.QDataBrowser.setAutoEdit(bool)
qtsql.QDataBrowser.autoEdit() -> bool
qtsql.QDataBrowser.seek(int, bool=False) -> bool
qtsql.QDataBrowser.firstRecordAvailable(bool)
qtsql.QDataBrowser.lastRecordAvailable(bool)
qtsql.QDataBrowser.nextRecordAvailable(bool)
qtsql.QDataBrowser.prevRecordAvailable(bool)
qtsql.QDataBrowser.currentChanged(QSqlRecord)
qtsql.QDataBrowser.primeInsert(QSqlRecord)
qtsql.QDataBrowser.primeUpdate(QSqlRecord)
qtsql.QDataBrowser.primeDelete(QSqlRecord)
qtsql.QDataBrowser.beforeInsert(QSqlRecord)
qtsql.QDataBrowser.beforeUpdate(QSqlRecord)
qtsql.QDataBrowser.beforeDelete(QSqlRecord)
qtsql.QDataBrowser.cursorChanged(QSqlCursor.Mode)
qtsql.QDataBrowser.refresh()
qtsql.QDataBrowser.insert()
qtsql.QDataBrowser.update()
qtsql.QDataBrowser.delOnCursor()
qtsql.QDataBrowser.first()
qtsql.QDataBrowser.last()
qtsql.QDataBrowser.next()
qtsql.QDataBrowser.prev()
qtsql.QDataBrowser.readFields()
qtsql.QDataBrowser.writeFields()
qtsql.QDataBrowser.clearValues()
qtsql.QDataBrowser.updateBoundary()
qtsql.QDataBrowser.insertCurrent() -> bool
qtsql.QDataBrowser.updateCurrent() -> bool
qtsql.QDataBrowser.deleteCurrent() -> bool
qtsql.QDataBrowser.currentEdited() -> bool
qtsql.QDataBrowser.confirmEdit(QSql.Op) -> QSql.Confirm
qtsql.QDataBrowser.confirmCancel(QSql.Op) -> QSql.Confirm
qtsql.QDataBrowser.handleError(QSqlError)
qtsql.QDataTable.Refresh
qtsql.QDataTable.RefreshData
qtsql.QDataTable.RefreshColumns
qtsql.QDataTable.RefreshAll
qtsql.QDataTable(QWidget=None, str=None)
qtsql.QDataTable.__init__(self, QWidget=None, str=None)
qtsql.QDataTable(QSqlCursor, bool=False, QWidget=None, str=None)
qtsql.QDataTable.__init__(self, QSqlCursor, bool=False, QWidget=None, str=None)
qtsql.QDataTable.metaObject() -> QMetaObject
qtsql.QDataTable.addColumn(QString, QString=QString.null, int=-1, QIconSet=QIconSet())
qtsql.QDataTable.removeColumn(unsigned long)
qtsql.QDataTable.setColumn(unsigned long, QString, QString=QString.null, int=-1, QIconSet=QIconSet())
qtsql.QDataTable.nullText() -> QString
qtsql.QDataTable.trueText() -> QString
qtsql.QDataTable.falseText() -> QString
qtsql.QDataTable.dateFormat() -> Qt.DateFormat
qtsql.QDataTable.confirmEdits() -> bool
qtsql.QDataTable.confirmInsert() -> bool
qtsql.QDataTable.confirmUpdate() -> bool
qtsql.QDataTable.confirmDelete() -> bool
qtsql.QDataTable.confirmCancels() -> bool
qtsql.QDataTable.autoDelete() -> bool
qtsql.QDataTable.autoEdit() -> bool
qtsql.QDataTable.filter() -> QString
qtsql.QDataTable.sort() -> QStringList
qtsql.QDataTable.setSqlCursor(QSqlCursor=None, bool=False, bool=False)
qtsql.QDataTable.sqlCursor() -> QSqlCursor
qtsql.QDataTable.setNullText(QString)
qtsql.QDataTable.setTrueText(QString)
qtsql.QDataTable.setFalseText(QString)
qtsql.QDataTable.setDateFormat(Qt.DateFormat)
qtsql.QDataTable.setConfirmEdits(bool)
qtsql.QDataTable.setConfirmInsert(bool)
qtsql.QDataTable.setConfirmUpdate(bool)
qtsql.QDataTable.setConfirmDelete(bool)
qtsql.QDataTable.setConfirmCancels(bool)
qtsql.QDataTable.setAutoDelete(bool)
qtsql.QDataTable.setAutoEdit(bool)
qtsql.QDataTable.setFilter(QString)
qtsql.QDataTable.setSort(QStringList)
qtsql.QDataTable.setSort(QSqlIndex)
qtsql.QDataTable.refresh(QDataTable.Refresh)
qtsql.QDataTable.sortColumn(int, bool=True, bool=False)
qtsql.QDataTable.text(int, int) -> QString
qtsql.QDataTable.value(int, int) -> QVariant
qtsql.QDataTable.currentRecord() -> QSqlRecord
qtsql.QDataTable.installEditorFactory(QSqlEditorFactory)
qtsql.QDataTable.installPropertyMap(QSqlPropertyMap)
qtsql.QDataTable.numCols() -> int
qtsql.QDataTable.numRows() -> int
qtsql.QDataTable.setNumCols(int)
qtsql.QDataTable.setNumRows(int)
qtsql.QDataTable.findBuffer(QSqlIndex, int=0) -> bool
qtsql.QDataTable.hideColumn(int)
qtsql.QDataTable.showColumn(int)
qtsql.QDataTable.currentChanged(QSqlRecord)
qtsql.QDataTable.primeInsert(QSqlRecord)
qtsql.QDataTable.primeUpdate(QSqlRecord)
qtsql.QDataTable.primeDelete(QSqlRecord)
qtsql.QDataTable.beforeInsert(QSqlRecord)
qtsql.QDataTable.beforeUpdate(QSqlRecord)
qtsql.QDataTable.beforeDelete(QSqlRecord)
qtsql.QDataTable.cursorChanged(QSql.Op)
qtsql.QDataTable.find(QString, bool, bool)
qtsql.QDataTable.sortAscending(int)
qtsql.QDataTable.sortDescending(int)
qtsql.QDataTable.refresh()
qtsql.QDataTable.setColumnWidth(int, int)
qtsql.QDataTable.adjustColumn(int)
qtsql.QDataTable.setColumnStretchable(int, bool)
qtsql.QDataTable.swapColumns(int, int, bool=False)
qtsql.QDataTable.insertCurrent() -> bool
qtsql.QDataTable.updateCurrent() -> bool
qtsql.QDataTable.deleteCurrent() -> bool
qtsql.QDataTable.confirmEdit(QSql.Op) -> QSql.Confirm
qtsql.QDataTable.confirmCancel(QSql.Op) -> QSql.Confirm
qtsql.QDataTable.handleError(QSqlError)
qtsql.QDataTable.beginInsert() -> bool
qtsql.QDataTable.beginUpdate(int, int, bool) -> QWidget
qtsql.QDataTable.eventFilter(QObject, QEvent) -> bool
qtsql.QDataTable.keyPressEvent(QKeyEvent)
qtsql.QDataTable.resizeEvent(QResizeEvent)
qtsql.QDataTable.contentsMousePressEvent(QMouseEvent)
qtsql.QDataTable.contentsContextMenuEvent(QContextMenuEvent)
qtsql.QDataTable.endEdit(int, int, bool, bool)
qtsql.QDataTable.createEditor(int, int, bool) -> QWidget
qtsql.QDataTable.activateNextCell()
qtsql.QDataTable.indexOf(unsigned long) -> int
qtsql.QDataTable.reset()
qtsql.QDataTable.setSize(QSqlCursor)
qtsql.QDataTable.repaintCell(int, int)
qtsql.QDataTable.paintCell(QPainter, int, int, QRect, bool, QColorGroup)
qtsql.QDataTable.paintField(QPainter, QSqlField, QRect, bool)
qtsql.QDataTable.drawContents(QPainter, int, int, int, int)
qtsql.QDataTable.fieldAlignment(QSqlField) -> int
qtsql.QDataTable.columnClicked(int)
qtsql.QDataTable.resizeData(int)
qtsql.QDataTable.item(int, int) -> QTableItem
qtsql.QDataTable.setItem(int, int, QTableItem)
qtsql.QDataTable.clearCell(int, int)
qtsql.QDataTable.setPixmap(int, int, QPixmap)
qtsql.QDataTable.takeItem(QTableItem)
qtsql.QDataView(QWidget=None, str=None, unsigned long=0)
qtsql.QDataView.__init__(self, QWidget=None, str=None, unsigned long=0)
qtsql.QDataView.metaObject() -> QMetaObject
qtsql.QDataView.setForm(QSqlForm)
qtsql.QDataView.form() -> QSqlForm
qtsql.QDataView.setRecord(QSqlRecord)
qtsql.QDataView.record() -> QSqlRecord
qtsql.QDataView.refresh(QSqlRecord)
qtsql.QDataView.readFields()
qtsql.QDataView.writeFields()
qtsql.QDataView.clearValues()
qtsql.QEditorFactory(QObject=None, str=None)
qtsql.QEditorFactory.__init__(self, QObject=None, str=None)
qtsql.QEditorFactory.metaObject() -> QMetaObject
qtsql.QEditorFactory.createEditor(QWidget, QVariant) -> QWidget
qtsql.QEditorFactory.defaultFactory() -> QEditorFactory
qtsql.QEditorFactory.installDefaultFactory(QEditorFactory)
qtsql.QSql.TableType
qtsql.QSql.Tables
qtsql.QSql.SystemTables
qtsql.QSql.Views
qtsql.QSql.AllTables
qtsql.QSql.ParameterType
qtsql.QSql.In
qtsql.QSql.Out
qtsql.QSql.InOut
qtsql.QSql.Confirm
qtsql.QSql.Cancel
qtsql.QSql.No
qtsql.QSql.Yes
qtsql.QSql.Location
qtsql.QSql.BeforeFirst
qtsql.QSql.AfterLast
qtsql.QSql.Op
qtsql.QSql.None
qtsql.QSql.Insert
qtsql.QSql.Update
qtsql.QSql.Delete
qtsql.QSql()
qtsql.QSql.__init__(self)
qtsql.QSqlRecord()
qtsql.QSqlRecord.__init__(self)
qtsql.QSqlRecord(QSqlRecord)
qtsql.QSqlRecord.__init__(self, QSqlRecord)
qtsql.QSqlRecord.value(int) -> QVariant
qtsql.QSqlRecord.value(QString) -> QVariant
qtsql.QSqlRecord.setValue(int, QVariant)
qtsql.QSqlRecord.setValue(QString, QVariant)
qtsql.QSqlRecord.isGenerated(int) -> bool
qtsql.QSqlRecord.isGenerated(QString) -> bool
qtsql.QSqlRecord.setGenerated(QString, bool)
qtsql.QSqlRecord.setGenerated(int, bool)
qtsql.QSqlRecord.setNull(int)
qtsql.QSqlRecord.setNull(QString)
qtsql.QSqlRecord.isNull(int) -> bool
qtsql.QSqlRecord.isNull(QString) -> bool
qtsql.QSqlRecord.position(QString) -> int
qtsql.QSqlRecord.fieldName(int) -> QString
qtsql.QSqlRecord.field(int) -> QSqlField
qtsql.QSqlRecord.field(QString) -> QSqlField
qtsql.QSqlRecord.append(QSqlField)
qtsql.QSqlRecord.insert(int, QSqlField)
qtsql.QSqlRecord.remove(int)
qtsql.QSqlRecord.isEmpty() -> bool
qtsql.QSqlRecord.contains(QString) -> bool
qtsql.QSqlRecord.clear()
qtsql.QSqlRecord.clearValues(bool=False)
qtsql.QSqlRecord.count() -> unsigned long
qtsql.QSqlRecord.toString(QString=QString.null, QString=",") -> QString
qtsql.QSqlRecord.toStringList(QString=QString.null) -> QStringList
qtsql.QSqlQuery(QSqlResult)
qtsql.QSqlQuery.__init__(self, QSqlResult)
qtsql.QSqlQuery(QString=QString.null, QSqlDatabase=None)
qtsql.QSqlQuery.__init__(self, QString=QString.null, QSqlDatabase=None)
qtsql.QSqlQuery(QSqlDatabase)
qtsql.QSqlQuery.__init__(self, QSqlDatabase)
qtsql.QSqlQuery(QSqlQuery)
qtsql.QSqlQuery.__init__(self, QSqlQuery)
qtsql.QSqlQuery.isValid() -> bool
qtsql.QSqlQuery.isActive() -> bool
qtsql.QSqlQuery.isNull(int) -> bool
qtsql.QSqlQuery.at() -> int
qtsql.QSqlQuery.lastQuery() -> QString
qtsql.QSqlQuery.numRowsAffected() -> int
qtsql.QSqlQuery.lastError() -> QSqlError
qtsql.QSqlQuery.isSelect() -> bool
qtsql.QSqlQuery.size() -> int
qtsql.QSqlQuery.driver() -> QSqlDriver
qtsql.QSqlQuery.result() -> QSqlResult
qtsql.QSqlQuery.isForwardOnly() -> bool
qtsql.QSqlQuery.setForwardOnly(bool)
qtsql.QSqlQuery.execQuery(QString) -> bool
qtsql.QSqlQuery.value(int) -> QVariant
qtsql.QSqlQuery.seek(int, bool=False) -> bool
qtsql.QSqlQuery.next() -> bool
qtsql.QSqlQuery.prev() -> bool
qtsql.QSqlQuery.first() -> bool
qtsql.QSqlQuery.last() -> bool
qtsql.QSqlQuery.execQuery() -> bool
qtsql.QSqlQuery.prepare(QString) -> bool
qtsql.QSqlQuery.bindValue(QString, QVariant)
qtsql.QSqlQuery.bindValue(int, QVariant)
qtsql.QSqlQuery.addBindValue(QVariant)
qtsql.QSqlQuery.bindValue(QString, QVariant, QSql.ParameterType)
qtsql.QSqlQuery.bindValue(int, QVariant, QSql.ParameterType)
qtsql.QSqlQuery.addBindValue(QVariant, QSql.ParameterType)
qtsql.QSqlQuery.boundValue(QString) -> QVariant
qtsql.QSqlQuery.boundValue(int) -> QVariant
qtsql.QSqlQuery.executedQuery() -> QString
qtsql.QSqlQuery.beforeSeek()
qtsql.QSqlQuery.afterSeek()
qtsql.QSqlCursor.Mode
qtsql.QSqlCursor.ReadOnly
qtsql.QSqlCursor.Insert
qtsql.QSqlCursor.Update
qtsql.QSqlCursor.Delete
qtsql.QSqlCursor.Writable
qtsql.QSqlCursor(QString=QString.null, bool=True, QSqlDatabase=None)
qtsql.QSqlCursor.__init__(self, QString=QString.null, bool=True, QSqlDatabase=None)
qtsql.QSqlCursor(QSqlCursor)
qtsql.QSqlCursor.__init__(self, QSqlCursor)
qtsql.QSqlCursor.value(int) -> QVariant
qtsql.QSqlCursor.value(QString) -> QVariant
qtsql.QSqlCursor.setValue(int, QVariant)
qtsql.QSqlCursor.setValue(QString, QVariant)
qtsql.QSqlCursor.primaryIndex(bool=True) -> QSqlIndex
qtsql.QSqlCursor.index(QStringList) -> QSqlIndex
qtsql.QSqlCursor.index(QString) -> QSqlIndex
qtsql.QSqlCursor.setPrimaryIndex(QSqlIndex)
qtsql.QSqlCursor.append(QSqlFieldInfo)
qtsql.QSqlCursor.insert(int, QSqlFieldInfo)
qtsql.QSqlCursor.remove(int)
qtsql.QSqlCursor.clear()
qtsql.QSqlCursor.setGenerated(QString, bool)
qtsql.QSqlCursor.setGenerated(int, bool)
qtsql.QSqlCursor.editBuffer(bool=False) -> QSqlRecord
qtsql.QSqlCursor.primeInsert() -> QSqlRecord
qtsql.QSqlCursor.primeUpdate() -> QSqlRecord
qtsql.QSqlCursor.primeDelete() -> QSqlRecord
qtsql.QSqlCursor.insert(bool=True) -> int
qtsql.QSqlCursor.update(bool=True) -> int
qtsql.QSqlCursor.delRecords(bool=True) -> int
qtsql.QSqlCursor.setMode(int)
qtsql.QSqlCursor.mode() -> int
qtsql.QSqlCursor.setCalculated(QString, bool)
qtsql.QSqlCursor.isCalculated(QString) -> bool
qtsql.QSqlCursor.setTrimmed(QString, bool)
qtsql.QSqlCursor.isTrimmed(QString) -> bool
qtsql.QSqlCursor.isReadOnly() -> bool
qtsql.QSqlCursor.canInsert() -> bool
qtsql.QSqlCursor.canUpdate() -> bool
qtsql.QSqlCursor.canDelete() -> bool
qtsql.QSqlCursor.select() -> bool
qtsql.QSqlCursor.select(QSqlIndex) -> bool
qtsql.QSqlCursor.select(QSqlIndex, QSqlIndex) -> bool
qtsql.QSqlCursor.select(QString, QSqlIndex=QSqlIndex()) -> bool
qtsql.QSqlCursor.setSort(QSqlIndex)
qtsql.QSqlCursor.sort() -> QSqlIndex
qtsql.QSqlCursor.setFilter(QString)
qtsql.QSqlCursor.filter() -> QString
qtsql.QSqlCursor.setName(QString, bool=True)
qtsql.QSqlCursor.name() -> QString
qtsql.QSqlCursor.toString(QString=QString.null, QString=",") -> QString
qtsql.QSqlCursor.isNull(int) -> bool
qtsql.QSqlCursor.isNull(QString) -> bool
qtsql.QSqlCursor.afterSeek()
qtsql.QSqlCursor.execQuery(QString) -> bool
qtsql.QSqlCursor.calculateField(QString) -> QVariant
qtsql.QSqlCursor.update(QString, bool=True) -> int
qtsql.QSqlCursor.delRecords(QString, bool=True) -> int
qtsql.QSqlCursor.toString(QString, QSqlField, QString) -> QString
qtsql.QSqlCursor.toString(QSqlRecord, QString, QString, QString) -> QString
qtsql.QSqlCursor.toString(QSqlIndex, QSqlRecord, QString, QString, QString) -> QString
qtsql.QSqlDatabase(QString, QString, QObject=None, str=None)
qtsql.QSqlDatabase.__init__(self, QString, QString, QObject=None, str=None)
qtsql.QSqlDatabase(QSqlDriver, QObject=None, str=None)
qtsql.QSqlDatabase.__init__(self, QSqlDriver, QObject=None, str=None)
qtsql.QSqlDatabase.metaObject() -> QMetaObject
qtsql.QSqlDatabase.open() -> bool
qtsql.QSqlDatabase.open(QString, QString) -> bool
qtsql.QSqlDatabase.close()
qtsql.QSqlDatabase.isOpen() -> bool
qtsql.QSqlDatabase.isOpenError() -> bool
qtsql.QSqlDatabase.tables() -> QStringList
qtsql.QSqlDatabase.tables(QSql.TableType) -> QStringList
qtsql.QSqlDatabase.primaryIndex(QString) -> QSqlIndex
qtsql.QSqlDatabase.record(QString) -> QSqlRecord
qtsql.QSqlDatabase.record(QSqlQuery) -> QSqlRecord
qtsql.QSqlDatabase.recordInfo(QString) -> 
qtsql.QSqlDatabase.recordInfo(QSqlQuery) -> 
qtsql.QSqlDatabase.execStatement(QString=QString.null) -> QSqlQuery
qtsql.QSqlDatabase.lastError() -> QSqlError
qtsql.QSqlDatabase.transaction() -> bool
qtsql.QSqlDatabase.commit() -> bool
qtsql.QSqlDatabase.rollback() -> bool
qtsql.QSqlDatabase.setDatabaseName(QString)
qtsql.QSqlDatabase.setUserName(QString)
qtsql.QSqlDatabase.setPassword(QString)
qtsql.QSqlDatabase.setHostName(QString)
qtsql.QSqlDatabase.setPort(int)
qtsql.QSqlDatabase.setConnectOptions(QString=QString.null)
qtsql.QSqlDatabase.databaseName() -> QString
qtsql.QSqlDatabase.userName() -> QString
qtsql.QSqlDatabase.password() -> QString
qtsql.QSqlDatabase.hostName() -> QString
qtsql.QSqlDatabase.driverName() -> QString
qtsql.QSqlDatabase.port() -> int
qtsql.QSqlDatabase.connectOptions() -> QString
qtsql.QSqlDatabase.driver() -> QSqlDriver
qtsql.QSqlDatabase.addDatabase(QString, QString=QString(QSqlDatabase.defaultConnection)) -> QSqlDatabase
qtsql.QSqlDatabase.addDatabase(QSqlDriver, QString=QString(QSqlDatabase.defaultConnection)) -> QSqlDatabase
qtsql.QSqlDatabase.database(QString=QString(QSqlDatabase.defaultConnection), bool=True) -> QSqlDatabase
qtsql.QSqlDatabase.removeDatabase(QString)
qtsql.QSqlDatabase.removeDatabase(QSqlDatabase)
qtsql.QSqlDatabase.contains(QString=QString(QSqlDatabase.defaultConnection)) -> bool
qtsql.QSqlDatabase.drivers() -> QStringList
qtsql.QSqlDatabase.isDriverAvailable(QString) -> bool
qtsql.QSqlDriver.DriverFeature
qtsql.QSqlDriver.Transactions
qtsql.QSqlDriver.QuerySize
qtsql.QSqlDriver.BLOB
qtsql.QSqlDriver.Unicode
qtsql.QSqlDriver.PreparedQueries
qtsql.QSqlDriver.NamedPlaceholders
qtsql.QSqlDriver.PositionalPlaceholders
qtsql.QSqlDriver(QObject=None, str=None)
qtsql.QSqlDriver.__init__(self, QObject=None, str=None)
qtsql.QSqlDriver.metaObject() -> QMetaObject
qtsql.QSqlDriver.isOpen() -> bool
qtsql.QSqlDriver.isOpenError() -> bool
qtsql.QSqlDriver.beginTransaction() -> bool
qtsql.QSqlDriver.commitTransaction() -> bool
qtsql.QSqlDriver.rollbackTransaction() -> bool
qtsql.QSqlDriver.tables(QString) -> QStringList
qtsql.QSqlDriver.primaryIndex(QString) -> QSqlIndex
qtsql.QSqlDriver.record(QString) -> QSqlRecord
qtsql.QSqlDriver.record(QSqlQuery) -> QSqlRecord
qtsql.QSqlDriver.recordInfo(QString) -> 
qtsql.QSqlDriver.recordInfo(QSqlQuery) -> 
qtsql.QSqlDriver.nullText() -> QString
qtsql.QSqlDriver.formatValue(QSqlField, bool=False) -> QString
qtsql.QSqlDriver.lastError() -> QSqlError
qtsql.QSqlDriver.hasFeature(QSqlDriver.DriverFeature) -> bool
qtsql.QSqlDriver.open(QString, QString=QString.null, QString=QString.null, QString=QString.null, int=-1) -> bool
qtsql.QSqlDriver.close()
qtsql.QSqlDriver.createQuery() -> QSqlQuery
qtsql.QSqlDriver.open(QString, QString, QString, QString, int, QString) -> bool
qtsql.QSqlDriver.setOpen(bool)
qtsql.QSqlDriver.setOpenError(bool)
qtsql.QSqlDriver.setLastError(QSqlError)
qtsql.QSqlEditorFactory(QObject=None, str=None)
qtsql.QSqlEditorFactory.__init__(self, QObject=None, str=None)
qtsql.QSqlEditorFactory.metaObject() -> QMetaObject
qtsql.QSqlEditorFactory.createEditor(QWidget, QVariant) -> QWidget
qtsql.QSqlEditorFactory.createEditor(QWidget, QSqlField) -> QWidget
qtsql.QSqlEditorFactory.defaultFactory() -> QSqlEditorFactory
qtsql.QSqlEditorFactory.installDefaultFactory(QSqlEditorFactory)
qtsql.QSqlError.Type
qtsql.QSqlError.None
qtsql.QSqlError.Connection
qtsql.QSqlError.Statement
qtsql.QSqlError.Transaction
qtsql.QSqlError.Unknown
qtsql.QSqlError(QString=QString.null, QString=QString.null, int=QSqlError.None, int=-1)
qtsql.QSqlError.__init__(self, QString=QString.null, QString=QString.null, int=QSqlError.None, int=-1)
qtsql.QSqlError(QSqlError)
qtsql.QSqlError.__init__(self, QSqlError)
qtsql.QSqlError.driverText() -> QString
qtsql.QSqlError.setDriverText(QString)
qtsql.QSqlError.databaseText() -> QString
qtsql.QSqlError.setDatabaseText(QString)
qtsql.QSqlError.type() -> int
qtsql.QSqlError.setType(int)
qtsql.QSqlError.number() -> int
qtsql.QSqlError.setNumber(int)
qtsql.QSqlError.text() -> QString
qtsql.QSqlError.showMessage(QString=QString.null)
qtsql.QSqlField(QString=QString.null, QVariant.Type=QVariant.Invalid)
qtsql.QSqlField.__init__(self, QString=QString.null, QVariant.Type=QVariant.Invalid)
qtsql.QSqlField(QSqlField)
qtsql.QSqlField.__init__(self, QSqlField)
qtsql.QSqlField.setValue(QVariant)
qtsql.QSqlField.value() -> QVariant
qtsql.QSqlField.setName(QString)
qtsql.QSqlField.name() -> QString
qtsql.QSqlField.setNull()
qtsql.QSqlField.isNull() -> bool
qtsql.QSqlField.setReadOnly(bool)
qtsql.QSqlField.isReadOnly() -> bool
qtsql.QSqlField.clear(bool=True)
qtsql.QSqlField.type() -> QVariant.Type
qtsql.QSqlFieldInfo(QString=QString.null, QVariant.Type=QVariant.Invalid, int=-1, int=-1, int=-1, QVariant=QVariant(), int=0, bool=True, bool=False, bool=False)
qtsql.QSqlFieldInfo.__init__(self, QString=QString.null, QVariant.Type=QVariant.Invalid, int=-1, int=-1, int=-1, QVariant=QVariant(), int=0, bool=True, bool=False, bool=False)
qtsql.QSqlFieldInfo(QSqlFieldInfo)
qtsql.QSqlFieldInfo.__init__(self, QSqlFieldInfo)
qtsql.QSqlFieldInfo(QSqlField, bool=True)
qtsql.QSqlFieldInfo.__init__(self, QSqlField, bool=True)
qtsql.QSqlFieldInfo.toField() -> QSqlField
qtsql.QSqlFieldInfo.isRequired() -> int
qtsql.QSqlFieldInfo.type() -> QVariant.Type
qtsql.QSqlFieldInfo.length() -> int
qtsql.QSqlFieldInfo.precision() -> int
qtsql.QSqlFieldInfo.defaultValue() -> QVariant
qtsql.QSqlFieldInfo.name() -> QString
qtsql.QSqlFieldInfo.typeID() -> int
qtsql.QSqlFieldInfo.isGenerated() -> bool
qtsql.QSqlFieldInfo.isTrim() -> bool
qtsql.QSqlFieldInfo.isCalculated() -> bool
qtsql.QSqlFieldInfo.setTrim(bool)
qtsql.QSqlFieldInfo.setGenerated(bool)
qtsql.QSqlFieldInfo.setCalculated(bool)
qtsql.QSqlForm(QObject=None, str=None)
qtsql.QSqlForm.__init__(self, QObject=None, str=None)
qtsql.QSqlForm.metaObject() -> QMetaObject
qtsql.QSqlForm.insert(QWidget, QString)
qtsql.QSqlForm.remove(QString)
qtsql.QSqlForm.count() -> unsigned long
qtsql.QSqlForm.widget(unsigned long) -> QWidget
qtsql.QSqlForm.widgetToField(QWidget) -> QSqlField
qtsql.QSqlForm.fieldToWidget(QSqlField) -> QWidget
qtsql.QSqlForm.installPropertyMap(QSqlPropertyMap)
qtsql.QSqlForm.setRecord(QSqlRecord)
qtsql.QSqlForm.readField(QWidget)
qtsql.QSqlForm.writeField(QWidget)
qtsql.QSqlForm.readFields()
qtsql.QSqlForm.writeFields()
qtsql.QSqlForm.clear()
qtsql.QSqlForm.clearValues(bool=False)
qtsql.QSqlForm.insert(QWidget, QSqlField)
qtsql.QSqlForm.remove(QWidget)
qtsql.QSqlIndex(QString=QString.null, QString=QString.null)
qtsql.QSqlIndex.__init__(self, QString=QString.null, QString=QString.null)
qtsql.QSqlIndex(QSqlIndex)
qtsql.QSqlIndex.__init__(self, QSqlIndex)
qtsql.QSqlIndex.setCursorName(QString)
qtsql.QSqlIndex.cursorName() -> QString
qtsql.QSqlIndex.setName(QString)
qtsql.QSqlIndex.name() -> QString
qtsql.QSqlIndex.append(QSqlField)
qtsql.QSqlIndex.append(QSqlField, bool)
qtsql.QSqlIndex.isDescending(int) -> bool
qtsql.QSqlIndex.setDescending(int, bool)
qtsql.QSqlIndex.toString(QString=QString.null, QString=",", bool=True) -> QString
qtsql.QSqlIndex.toStringList(QString=QString.null, bool=True) -> QStringList
qtsql.QSqlIndex.fromStringList(QStringList, QSqlCursor) -> QSqlIndex
qtsql.QSqlPropertyMap()
qtsql.QSqlPropertyMap.__init__(self)
qtsql.QSqlPropertyMap.property(QWidget) -> QVariant
qtsql.QSqlPropertyMap.setProperty(QWidget, QVariant)
qtsql.QSqlPropertyMap.insert(QString, QString)
qtsql.QSqlPropertyMap.remove(QString)
qtsql.QSqlPropertyMap.defaultMap() -> QSqlPropertyMap
qtsql.QSqlPropertyMap.installDefaultMap(QSqlPropertyMap)
qtsql.QSqlResult(QSqlDriver)
qtsql.QSqlResult.__init__(self, QSqlDriver)
qtsql.QSqlResult.at() -> int
qtsql.QSqlResult.lastQuery() -> QString
qtsql.QSqlResult.lastError() -> QSqlError
qtsql.QSqlResult.isValid() -> bool
qtsql.QSqlResult.isActive() -> bool
qtsql.QSqlResult.isSelect() -> bool
qtsql.QSqlResult.isForwardOnly() -> bool
qtsql.QSqlResult.driver() -> QSqlDriver
qtsql.QSqlResult.setAt(int)
qtsql.QSqlResult.setActive(bool)
qtsql.QSqlResult.setLastError(QSqlError)
qtsql.QSqlResult.setQuery(QString)
qtsql.QSqlResult.setSelect(bool)
qtsql.QSqlResult.setForwardOnly(bool)
qtsql.QSqlResult.data(int) -> QVariant
qtsql.QSqlResult.isNull(int) -> bool
qtsql.QSqlResult.reset(QString) -> bool
qtsql.QSqlResult.fetch(int) -> bool
qtsql.QSqlResult.fetchNext() -> bool
qtsql.QSqlResult.fetchPrev() -> bool
qtsql.QSqlResult.fetchFirst() -> bool
qtsql.QSqlResult.fetchLast() -> bool
qtsql.QSqlResult.size() -> int
qtsql.QSqlResult.numRowsAffected() -> int
qtsql.QSqlSelectCursor(QString=QString.null, QSqlDatabase=None)
qtsql.QSqlSelectCursor.__init__(self, QString=QString.null, QSqlDatabase=None)
qtsql.QSqlSelectCursor(QSqlSelectCursor)
qtsql.QSqlSelectCursor.__init__(self, QSqlSelectCursor)
qtsql.QSqlSelectCursor.execQuery(QString) -> bool
qtsql.QSqlSelectCursor.select() -> bool
qtsql.QSqlSelectCursor.primaryIndex(bool=True) -> QSqlIndex
qtsql.QSqlSelectCursor.index(QStringList) -> QSqlIndex
qtsql.QSqlSelectCursor.index(QString) -> QSqlIndex
qtsql.QSqlSelectCursor.setPrimaryIndex(QSqlIndex)
qtsql.QSqlSelectCursor.append(QSqlFieldInfo)
qtsql.QSqlSelectCursor.insert(int, QSqlFieldInfo)
qtsql.QSqlSelectCursor.remove(int)
qtsql.QSqlSelectCursor.clear()
qtsql.QSqlSelectCursor.setGenerated(QString, bool)
qtsql.QSqlSelectCursor.setGenerated(int, bool)
qtsql.QSqlSelectCursor.editBuffer(bool=False) -> QSqlRecord
qtsql.QSqlSelectCursor.primeInsert() -> QSqlRecord
qtsql.QSqlSelectCursor.primeUpdate() -> QSqlRecord
qtsql.QSqlSelectCursor.primeDelete() -> QSqlRecord
qtsql.QSqlSelectCursor.insert(bool=True) -> int
qtsql.QSqlSelectCursor.update(bool=True) -> int
qtsql.QSqlSelectCursor.delRecords(bool=True) -> int
qtsql.QSqlSelectCursor.setMode(int)
qtsql.QSqlSelectCursor.setSort(QSqlIndex)
qtsql.QSqlSelectCursor.sort() -> QSqlIndex
qtsql.QSqlSelectCursor.setFilter(QString)
qtsql.QSqlSelectCursor.filter() -> QString
qtsql.QSqlSelectCursor.setName(QString, bool=True)
qtsql.QSqlSelectCursor.name() -> QString
qtsql.QSqlSelectCursor.toString(QString=QString.null, QString=",") -> QString
qtsql.QSqlSelectCursor.select(QString, QSqlIndex=QSqlIndex()) -> bool
